# -*- coding: utf-8 -*-
"""testepandas-logica-BM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WHaYvi78fAya0jAl1VFYGRxRu4vj0VyE
"""

#Series
#1. Instalação e importação do pandas no terminal


# Importação da biblioteca e criação de series a partir duma lista:

import pandas as pd # Para mais curiosidades, visite a documentação: https://pandas.pydata.org/
import numpy as np
import matplotlib.pyplot as plt


# Criando uma Series a partir de uma lista
s = pd.Series([10, 20, 30, 40])
print(s)

# Acessando valores
print("Valor em índice 'b':", s["b"])
print("Valores maiores que 20:\n", s[s > 20])

#OBS. Uma Series tem valores e índices. Pode ser criada a partir de listas, arrays NumPy ou dicionários.

#DataFrame: é uma tabela de dados, onde cada coluna é uma Series.
#OBS. Instale e faça importação do numpy

#Importação do numpy. Para mais curiosidades, visite a documentação: https://numpy.org/
import numpy as np

# Criando um DataFrame a partir de um dicionário
dados = {
    "Produto": ["A", "B", "C"],
    "Preço": [10.5, 8.2, 12.0],
    "Quantidade": [5, 10, 3]
}

df = pd.DataFrame(dados)
print(df)

# Acessando colunas
print("\nColuna Preço:\n", df["Preço"])

# Acessando linhas
print("\nPrimeira linha com iloc:\n", df.iloc[0])
print("\nLinha com índice 2 usando loc:\n", df.loc[2])

#OBS. DataFrame é a estrutura mais usada no Pandas. Pode ser criado de várias fontes: dicionário, CSV, Excel, SQL etc. Colunas = Series; o DataFrame é um conjunto organizado delas.

# Base funcionarios

df = pd.read_csv("/content/funcionarios.csv")

print("Primeiras linhas:\n", df.head())
print("\nInfo:\n")
df.info()
print("\nResumo estatístico:\n", df.describe(include="all"))

#Estatísticas descritivas
# Estatísticas básicas
print("Idade média:", df["Idade"].mean())
print("Salário médio:", df["Salario"].mean())

# Frequência categórica
print("\nDistribuição de Sexo:\n", df["Sexo"].value_counts())
print("\nDistribuição de Escolaridade:\n", df["Escolaridade"].value_counts())
print("\nDistribuição por Cidade:\n", df["Cidade"].value_counts())

#Visualizações, importação de matplotlib
import matplotlib.pyplot as plt

# Histograma de idades
df["Idade"].hist(bins=10, figsize=(6,4))
plt.title("Distribuição de Idades")
plt.xlabel("Idade")
plt.ylabel("Frequência")
plt.show()

# Boxplot de salários por sexo
df.boxplot(column="Salario", by="Sexo", figsize=(6,4))
plt.title("Salário por Sexo")
plt.suptitle("")
plt.ylabel("Salário")
plt.show()

# Salário médio por escolaridade
df.groupby("Escolaridade")["Salario"].mean().plot(kind="bar", figsize=(7,4))
plt.title("Salário Médio por Escolaridade")
plt.ylabel("Salário Médio")
plt.show()

# Salário médio por estado (cidade)
df.groupby("Cidade")["Salario"].mean().plot(kind="bar", figsize=(9,4))
plt.title("Salário Médio por Estado")
plt.ylabel("Salário Médio")
plt.xticks(rotation=45, ha="right")
plt.show()

#Correlação
# Correlação entre variáveis numéricas
print("\nMatriz de correlação:\n", df.corr(numeric_only=True))

import seaborn as sns

plt.figure(figsize=(5,4))
sns.heatmap(df.corr(numeric_only=True), annot=True, cmap="coolwarm")
plt.title("Matriz de Correlação")
plt.show()